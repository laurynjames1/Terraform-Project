provider "azurerm" {
  features {}
  subscription_id = "cbe41c4f-5119-4011-8aae-b4163df9cc65"
}

# Resource Group
resource "azurerm_resource_group" "ltc-rg" {
  name     = "ltc-resource"
  location = "East US"
}

# Virtual Network
resource "azurerm_virtual_network" "ltc-vn" {
  name                = "ltc-network"
  resource_group_name = azurerm_resource_group.ltc-rg.name
  location            = azurerm_resource_group.ltc-rg.location
  address_space       = ["10.30.0.0/16"]

  tags = {
    environment = "dev"
  }
}

# Subnet
resource "azurerm_subnet" "ltc-sn" {
  name                 = "ltc-subnet"
  resource_group_name  = azurerm_resource_group.ltc-rg.name
  virtual_network_name = azurerm_virtual_network.ltc-vn.name
  address_prefixes     = ["10.30.1.0/24"]
}


# NSG
resource "azurerm_network_security_group" "ltc-nsg" {
  name                = "ltc-nsg"
  location            = azurerm_resource_group.ltc-rg.location
  resource_group_name = azurerm_resource_group.ltc-rg.name

  tags = {
    environment = "dev"
  }
}

# Security Rule
resource "azurerm_network_security_rule" "ltc-sec-rule" {
  name                        = "ltc-sec-rule"
  priority                    = 100
  direction                   = "Inbound"
  access                      = "Allow"
  protocol                    = "Tcp"
  source_port_range           = "*"
  destination_port_range      = "22"
  source_address_prefix       = "172.0.12.230/32"
  destination_address_prefix  = "*"
  resource_group_name         = azurerm_resource_group.ltc-rg.name
  network_security_group_name = azurerm_network_security_group.ltc-nsg.name
}

# Create network interface
resource "azurerm_network_interface" "ltc-NIC" {
  name                = "ltc-NIC"
  location            = azurerm_resource_group.ltc-rg.location
  resource_group_name = azurerm_resource_group.ltc-rg.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.ltc-sn.id
    private_ip_address_allocation = "Static"
    private_ip_address        = "10.30.1.10" # Choose any free IP in 10.30.1.4-254
  }
}

resource "azurerm_subnet_network_security_group_association" "ltc-sga" {
  subnet_id                 = azurerm_subnet.ltc-sn.id
  network_security_group_id = azurerm_network_security_group.ltc-dev-rule.id
}

# Generate random text for a unique storage account name

resource "random_id" "random_id" {
  keepers = {
    # Generate a new ID only when a new resource group is defined
    resource_group = azurerm_resource_group.ltc-rg.name
  }

  byte_length = 8
}

# Create storage account for boot diagnostics
resource "azurerm_storage_account" "ltc-storage" {
  name                     = "diag${random_id.random_id.hex}"
  location                 = azurerm_resource_group.ltc-rg.location
  resource_group_name      = azurerm_resource_group.ltc-rg.name
  account_tier             = "Standard"
  account_replication_type = "LRS"
}

# Create virtual machine
resource "azurerm_linux_virtual_machine" "vm-03" {
  name                  = "vm-03"
  location              = azurerm_resource_group.ltc-rg.location
  resource_group_name   = azurerm_resource_group.ltc-rg.name
  network_interface_ids = [azurerm_network_interface.ltc-NIC.id]
  size                  = "Standard_DS1_v2"

  os_disk {
    name                 = "ltc-OsDisk"
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "0001-com-ubuntu-server-jammy"
    sku       = "22_04-lts-gen2"
    version   = "latest"
  }

  computer_name  = "Asterick001"
  admin_username = var.admin_username

  admin_ssh_key {
    username   = var.admin_username
    public_key = azapi_resource_action.ssh_public_key_gen.output.publicKey
  }

  boot_diagnostics {
    storage_account_uri = azurerm_storage_account.ltc-storage.primary_blob_endpoint
  }
}

resource "azurerm_log_analytics_workspace" "sentinel_law" {
  name                = "ltc-law"
  location            = azurerm_resource_group.ltc-rg.location
  resource_group_name = azurerm_resource_group.ltc-rg.name
  sku                 = "PerGB2018"
  retention_in_days   = 30
}

resource "azurerm_sentinel_log_analytics_workspace_onboarding" "sentinel" {
  workspace_id = azurerm_log_analytics_workspace.sentinel_law.id
}

resource "azurerm_virtual_machine_extension" "oms_agent" {
  name                 = "OmsAgentForLinux"
  virtual_machine_id   = azurerm_linux_virtual_machine.vm-03.id
  publisher            = "Microsoft.EnterpriseCloud.Monitoring"
  type                 = "OmsAgentForLinux"
  type_handler_version = "1.13"

  settings = jsonencode({
    workspaceId = azurerm_log_analytics_workspace.sentinel_law.workspace_id
  })

  protected_settings = jsonencode({
    workspaceKey = azurerm_log_analytics_workspace.sentinel_law.primary_shared_key
  })
}
